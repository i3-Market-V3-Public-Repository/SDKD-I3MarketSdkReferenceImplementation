{
  "swagger" : "2.0",
  "info" : {
    "description" : "i3Market SDK RI Generator REST API spec.",
    "version" : "v1.0",
    "title" : "Swagger spec for i3Market SDK RI Generator REST API"
  },
  "basePath" : "/SdkRefImpl/api",
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/sdk-ri/example/backplane/pingBackplane" : {
      "get" : {
        "summary" : "Ping backplane instance using PingController ",
        "description" : "",
        "operationId" : "runBackplaneExample",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "back_token",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PingResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/sdk-ri/example/oidc/getOidcWTKS" : {
      "get" : {
        "summary" : "Get OIDC Web tokek key set from OidcCoreController ",
        "description" : "",
        "operationId" : "runOidcExample",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "back_token",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseJWKSet"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/sdk-ri/getConfigurationInfo" : {
      "get" : {
        "summary" : "Get SDK-RI configuration info ",
        "description" : "",
        "operationId" : "getConfigurationInfo",
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    }
  },
  "definitions" : {
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "type" : "object"
        }
      }
    },
    "ApiResponseJWKSet" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "$ref" : "#/definitions/JWKSet"
        }
      }
    },
    "JWK" : {
      "type" : "object",
      "properties" : {
        "kty" : {
          "type" : "string",
          "description" : "The \"kty\" (key type) parameter identifies the cryptographic algorithm family used with the key, such as \"RSA\" or \"EC\""
        },
        "use" : {
          "type" : "string",
          "description" : "The \"use\" (public key use) parameter identifies the intended use of the public key"
        },
        "key_ops" : {
          "type" : "string",
          "description" : "The \"key_ops\" (key operations) parameter identifies the operation(s) for which the key is intended to be used"
        },
        "alg" : {
          "type" : "string",
          "description" : "The \"alg\" (algorithm) parameter identifies the algorithm intended for use with the key"
        },
        "kid" : {
          "type" : "string",
          "description" : "The \"kid\" (key ID) parameter is used to match a specific key"
        },
        "x5u" : {
          "type" : "string",
          "description" : "The \"x5u\" (X.509 URL) parameter is a URI [RFC3986] that refers to a resource for an X.509 public key certificate or certificate chain [RFC5280]"
        },
        "x5c" : {
          "type" : "string",
          "description" : "The \"x5c\" (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates [RFC5280]"
        },
        "x5t" : {
          "type" : "string",
          "description" : "The \"x5t\" (X.509 certificate SHA-1 thumbprint) parameter is a base64url-encoded SHA-1 thumbprint (a.k.a. digest) of the DER encoding of an X.509 certificate [RFC5280]"
        },
        "x5t#S256" : {
          "type" : "string",
          "description" : "The \"x5t#S256\" (X.509 certificate SHA-256 thumbprint) parameter is a base64url-encoded SHA-256 thumbprint (a.k.a. digest) of the DER encoding of an X.509 certificate [RFC5280]"
        }
      }
    },
    "JWKSet" : {
      "type" : "object",
      "properties" : {
        "keys" : {
          "type" : "array",
          "description" : "The value of the \"keys\" parameter is an array of JWK values",
          "items" : {
            "$ref" : "#/definitions/JWK"
          }
        }
      }
    },
    "PingResponse" : {
      "type" : "object",
      "properties" : {
        "greeting" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    }
  }
}