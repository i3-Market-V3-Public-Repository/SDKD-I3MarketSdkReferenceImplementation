{
  "swagger" : "2.0",
  "info" : {
    "description" : "i3Market SDK RI Generator REST API spec.",
    "version" : "v1.0",
    "title" : "Swagger spec for i3Market SDK RI Generator REST API"
  },
  "basePath" : "/SdkRefImpl/api",
  "tags" : [ {
    "name" : "common-services: alerts"
  }, {
    "name" : "common-services: contract"
  }, {
    "name" : "common-services: credential"
  }, {
    "name" : "common-services: exchange"
  }, {
    "name" : "common-services: management"
  }, {
    "name" : "common-services: notification"
  }, {
    "name" : "common-services: offering"
  }, {
    "name" : "common-services: token"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/sdk-ri/alerts/users/subscriptions" : {
      "get" : {
        "tags" : [ "common-services: alerts" ],
        "summary" : "Get all user's subscriptions",
        "description" : "",
        "operationId" : "getSubscriptions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseListUserSubscriptionList"
            }
          },
          "400" : {
            "description" : "Incomplete request"
          }
        }
      }
    },
    "/sdk-ri/alerts/users/{user_id}/subscriptions" : {
      "get" : {
        "tags" : [ "common-services: alerts" ],
        "summary" : "Get user's subscriptions by user ID",
        "description" : "",
        "operationId" : "getSubscriptionsByUserID",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseListSubscription"
            }
          },
          "400" : {
            "description" : "Incomplete request"
          }
        }
      },
      "post" : {
        "tags" : [ "common-services: alerts" ],
        "summary" : "Register a user to receive alerts for a category",
        "description" : "",
        "operationId" : "createUserSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateSubscription"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseSubscription"
            }
          },
          "400" : {
            "description" : "Already exists subscription to category"
          },
          "406" : {
            "description" : "Empty body"
          }
        }
      }
    },
    "/sdk-ri/alerts/users/{user_id}/subscriptions/{subscription_id}" : {
      "get" : {
        "tags" : [ "common-services: alerts" ],
        "summary" : "Get a user subscription by user ID and subscription ID",
        "description" : "",
        "operationId" : "getSubscriptionsByUserIDSubscriptionID",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseSubscription"
            }
          },
          "400" : {
            "description" : "Incomplete request"
          }
        }
      },
      "delete" : {
        "tags" : [ "common-services: alerts" ],
        "summary" : "Delete a subscription",
        "description" : "",
        "operationId" : "deleteUserSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseSubscription"
            }
          },
          "400" : {
            "description" : "Incomplete request"
          }
        }
      }
    },
    "/sdk-ri/alerts/users/{user_id}/subscriptions/{subscription_id}/activate" : {
      "patch" : {
        "tags" : [ "common-services: alerts" ],
        "summary" : "Activate a subscription",
        "description" : "",
        "operationId" : "activateSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseSubscription"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/sdk-ri/alerts/users/{user_id}/subscriptions/{subscription_id}/deactivate" : {
      "patch" : {
        "tags" : [ "common-services: alerts" ],
        "summary" : "Deactivate a subscription",
        "description" : "",
        "operationId" : "deactivateSubscription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseSubscription"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/sdk-ri/contract/create-data-purchase" : {
      "post" : {
        "tags" : [ "common-services: contract" ],
        "summary" : "create a data purchase request",
        "description" : "",
        "operationId" : "createDataPurchase",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "origin_market_id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Template"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseObject"
            }
          },
          "400" : {
            "description" : "failed to generate the notification"
          }
        }
      }
    },
    "/sdk-ri/contract/get-contract-template/{idOffering}" : {
      "get" : {
        "tags" : [ "common-services: contract" ],
        "summary" : "retrieve the contract template",
        "description" : "",
        "operationId" : "getContractTemplate",
        "produces" : [ "text/html", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "idOffering",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "400" : {
            "description" : "failed to get the contract template"
          }
        }
      }
    },
    "/sdk-ri/create-invoice" : {
      "post" : {
        "tags" : [ "common-services: exchange" ],
        "summary" : "create invoice",
        "description" : "",
        "operationId" : "createInvoice",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bearerToken",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fromDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "toDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Invoice"
            }
          },
          "400" : {
            "description" : "failed to get invoice"
          }
        }
      }
    },
    "/sdk-ri/credential" : {
      "get" : {
        "tags" : [ "common-services: credential" ],
        "summary" : "get the issued credential list",
        "description" : "",
        "operationId" : "getCredentialsList",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "failed to get the credential list"
          }
        }
      }
    },
    "/sdk-ri/credential/issue/{did}/{credential}" : {
      "get" : {
        "tags" : [ "common-services: credential" ],
        "summary" : "generate a verifiable credential",
        "description" : "",
        "operationId" : "getIssueVerifiableCredential",
        "produces" : [ "text/html", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credential",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "400" : {
            "description" : "failed to get the page to generate issue a credential"
          }
        }
      }
    },
    "/sdk-ri/credential/revoke" : {
      "post" : {
        "tags" : [ "common-services: credential" ],
        "summary" : "revoke a credential by jwt ",
        "description" : "",
        "operationId" : "revokeVerifiableCredentialByJWT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InlineObject"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "400" : {
            "description" : "failed to revoke the credential"
          }
        }
      }
    },
    "/sdk-ri/credential/verify" : {
      "post" : {
        "tags" : [ "common-services: credential" ],
        "summary" : "verify a credential by jwt ",
        "description" : "",
        "operationId" : "verifyVerifiableCredentialByJWT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InlineObject1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "400" : {
            "description" : "failed to verify the credential"
          }
        }
      }
    },
    "/sdk-ri/decrypt" : {
      "post" : {
        "tags" : [ "common-services: exchange" ],
        "summary" : "decrypt cipherblock",
        "description" : "",
        "operationId" : "decrypt",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "cipherblock",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "jwk",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "failed to decrypt cipherblock"
          }
        }
      }
    },
    "/sdk-ri/delete-file" : {
      "delete" : {
        "tags" : [ "common-services: exchange" ],
        "summary" : "delete file",
        "description" : "",
        "operationId" : "deleteFile",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "data",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to delete file"
          }
        }
      }
    },
    "/sdk-ri/delete-offering/{id}" : {
      "delete" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "delete a data offering by offeringId",
        "description" : "",
        "operationId" : "deleteDataOffering",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "failed to delete offering"
          }
        }
      }
    },
    "/sdk-ri/download-file" : {
      "post" : {
        "tags" : [ "common-services: exchange" ],
        "summary" : "download file",
        "description" : "",
        "operationId" : "downloadFile",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "data",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FileInputStream"
            }
          },
          "400" : {
            "description" : "failed to download file"
          }
        }
      }
    },
    "/sdk-ri/get-block/{data}" : {
      "post" : {
        "tags" : [ "common-services: exchange" ],
        "summary" : "get data block",
        "description" : "",
        "operationId" : "accountDataBlock",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bearerToken",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "block_id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "block_ack",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to get data block"
          }
        }
      }
    },
    "/sdk-ri/get-file/{data}" : {
      "post" : {
        "tags" : [ "common-services: exchange" ],
        "summary" : "get file",
        "description" : "",
        "operationId" : "accountDataFile",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bearerToken",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to get file"
          }
        }
      }
    },
    "/sdk-ri/get-jwk" : {
      "get" : {
        "tags" : [ "common-services: exchange" ],
        "summary" : "get jwk",
        "description" : "",
        "operationId" : "getJwk",
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to get jwk"
          }
        }
      }
    },
    "/sdk-ri/getConfigurationInfo" : {
      "get" : {
        "tags" : [ "common-services: management" ],
        "summary" : "Get SDK-RI configuration info ",
        "description" : "",
        "operationId" : "getConfigurationInfo",
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/sdk-ri/issuer/subscribe" : {
      "get" : {
        "tags" : [ "common-services: credential" ],
        "summary" : "subscribe the issuer",
        "description" : "",
        "operationId" : "getSubscribeIssuer",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "400" : {
            "description" : "failed to subscribe the issuer"
          }
        }
      }
    },
    "/sdk-ri/issuer/unsubscribe" : {
      "get" : {
        "tags" : [ "common-services: credential" ],
        "summary" : "unsubscribe the issuer",
        "description" : "",
        "operationId" : "getUnsubscribeIssuer",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "400" : {
            "description" : "failed to unsubscribe the issuer"
          }
        }
      }
    },
    "/sdk-ri/issuer/verify" : {
      "get" : {
        "tags" : [ "common-services: credential" ],
        "summary" : "verify the issuer subscription",
        "description" : "",
        "operationId" : "getVerifyIssuerSubscription",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "400" : {
            "description" : "failed to verify the issuer subscription"
          }
        }
      }
    },
    "/sdk-ri/notification" : {
      "get" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "retrieve all the stored notifications",
        "description" : "",
        "operationId" : "retrieveAllNotifications",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseListNotification"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "Creates a user notification and store it",
        "description" : "",
        "operationId" : "createUserNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserNotification"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseNotification"
            }
          },
          "400" : {
            "description" : "failed to add notification"
          }
        }
      }
    },
    "/sdk-ri/notification/service" : {
      "post" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "Creates a notification to send to other registered services",
        "description" : "",
        "operationId" : "createServiceNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceNotification"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseObject"
            }
          },
          "400" : {
            "description" : "failed to add notification"
          }
        }
      }
    },
    "/sdk-ri/notification/unread" : {
      "get" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "retrieve all the unread stored notifications",
        "description" : "",
        "operationId" : "getAllUnreadNotifications",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseListNotification"
            }
          }
        }
      }
    },
    "/sdk-ri/notification/user/{user_id}" : {
      "get" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "retrieve all the stored notifications for a user",
        "description" : "",
        "operationId" : "retrieveNotificationsByUserId",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseListNotification"
            }
          }
        }
      }
    },
    "/sdk-ri/notification/user/{user_id}/unread" : {
      "get" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "retrieve all the unread stored notifications for a user",
        "description" : "",
        "operationId" : "retrieveUnreadNotificationsByUserId",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseListNotification"
            }
          }
        }
      }
    },
    "/sdk-ri/notification/{notification_id}" : {
      "get" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "retrieve all the unread stored notifications for a user",
        "description" : "",
        "operationId" : "retrieveNotificationsByNotificationId",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notification_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseNotification"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "Delete a notification by id",
        "description" : "",
        "operationId" : "deleteNotification",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notification_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseNotification"
            }
          },
          "400" : {
            "description" : "failed to modify notification"
          }
        }
      }
    },
    "/sdk-ri/notification/{notification_id}/read" : {
      "patch" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "Mark a notification as read",
        "description" : "",
        "operationId" : "markAsReadNotification",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notification_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseNotification"
            }
          },
          "400" : {
            "description" : "failed to modify notification"
          }
        }
      }
    },
    "/sdk-ri/notification/{notification_id}/unread" : {
      "patch" : {
        "tags" : [ "common-services: notification" ],
        "summary" : "Mark a notification as unread",
        "description" : "",
        "operationId" : "markAsUnreadNotification",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notification_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseNotification"
            }
          },
          "400" : {
            "description" : "failed to modify notification"
          }
        }
      }
    },
    "/sdk-ri/offering/contract-parameter/{offeringId}/offeringId" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve contract parameters by offeringId",
        "description" : "",
        "operationId" : "retrieveOfferingContractParametersByOfferingId",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offeringId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to retrieve this offering"
          }
        }
      }
    },
    "/sdk-ri/offering/offerings-list" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve offering list from internal database only",
        "description" : "",
        "operationId" : "retrieveDataOfferingList",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to search offering with this category "
          }
        }
      }
    },
    "/sdk-ri/offering/providers-list" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve  data provider list from internal database",
        "description" : "",
        "operationId" : "retrieveAllProviders",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to search offering with this category "
          }
        }
      }
    },
    "/sdk-ri/offering/providers/{category}/category" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve  provider list by category from internal database only",
        "description" : "",
        "operationId" : "retrieveProviderIdListByCategory",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to search offering with this category "
          }
        }
      }
    },
    "/sdk-ri/offering/template" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "get a template for data offering",
        "description" : "",
        "operationId" : "getDataOfferingTemplate",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseString"
            }
          },
          "400" : {
            "description" : "failed to fetch offering template"
          }
        }
      }
    },
    "/sdk-ri/offering/{category}" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve data offerings by a category",
        "description" : "",
        "operationId" : "retrieveDataOfferingByCategory",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to search offering with this category "
          }
        }
      }
    },
    "/sdk-ri/offering/{id}/offeringId" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve a data offering by offering id",
        "description" : "",
        "operationId" : "retrieveDataOfferingById",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to retrieve this offering"
          }
        }
      }
    },
    "/sdk-ri/offering/{id}/providerId" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve all data offerings by a data providerId",
        "description" : "",
        "operationId" : "retrieveAllDataOfferingsByProviderId",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to retrieve offerings registered by this user"
          }
        }
      }
    },
    "/sdk-ri/registration/categories-list" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "retrieve category list",
        "description" : "",
        "operationId" : "retrieveCategoryList",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to retrieve this offering"
          }
        }
      }
    },
    "/sdk-ri/registration/data-offering" : {
      "post" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "register a data offering",
        "description" : "",
        "operationId" : "registerDataOffering",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataOffering"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseDataOfferingDto"
            }
          },
          "400" : {
            "description" : "failed to save offering"
          }
        }
      }
    },
    "/sdk-ri/registration/data-provider" : {
      "post" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "register a data provider",
        "description" : "",
        "operationId" : "registerDataProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataProvider"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseVoid"
            }
          },
          "400" : {
            "description" : "failed to save provider info"
          }
        }
      }
    },
    "/sdk-ri/registration/data-provider/{providerId}" : {
      "delete" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "delete an existing data provider",
        "description" : "",
        "operationId" : "deleteDataProvider",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponseVoid"
            }
          },
          "400" : {
            "description" : "failed to delete data provider"
          }
        }
      }
    },
    "/sdk-ri/registration/offerings" : {
      "get" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "Get total offering by category and providerID",
        "description" : "",
        "operationId" : "retrieveTotalOfferingAndOfferingList",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "providerId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "All"
        }, {
          "name" : "category",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "All"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "failed to retrieve offering"
          }
        }
      }
    },
    "/sdk-ri/token/balances/{address}" : {
      "get" : {
        "tags" : [ "common-services: token" ],
        "summary" : "get marketplace balance by marketplace address",
        "description" : "",
        "operationId" : "getBalanceByAddress",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Balances"
            }
          },
          "400" : {
            "description" : "failed to get marketplace balance with this address"
          }
        }
      }
    },
    "/sdk-ri/token/clearing" : {
      "post" : {
        "tags" : [ "common-services: token" ],
        "summary" : "clearing operation",
        "description" : "",
        "operationId" : "clearing",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClearBalance"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClearingBalance"
            }
          },
          "400" : {
            "description" : "failed to clearing tokens"
          }
        }
      }
    },
    "/sdk-ri/token/deploytransaction" : {
      "post" : {
        "tags" : [ "common-services: token" ],
        "summary" : "deploy operation",
        "description" : "",
        "operationId" : "deployTransaction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeployTransactionToBesu"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeployedSignedTransaction"
            }
          },
          "400" : {
            "description" : "deploy failed"
          }
        }
      }
    },
    "/sdk-ri/token/exchangein" : {
      "post" : {
        "tags" : [ "common-services: token" ],
        "summary" : "exchange in operation",
        "description" : "",
        "operationId" : "exchangeIn",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExchangeMoneyForTokens"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExchangeIn"
            }
          },
          "400" : {
            "description" : "failed to exchange in tokens"
          }
        }
      }
    },
    "/sdk-ri/token/exchangeout" : {
      "post" : {
        "tags" : [ "common-services: token" ],
        "summary" : "exchange out operation",
        "description" : "",
        "operationId" : "exchangeOut",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExchangeTokensForMoney"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExchangeOut"
            }
          },
          "400" : {
            "description" : "failed to exchange out tokens"
          }
        }
      }
    },
    "/sdk-ri/token/marketplace" : {
      "post" : {
        "tags" : [ "common-services: token" ],
        "summary" : "add a new marketplace to the treasury smart contract and create a new token ",
        "description" : "",
        "operationId" : "addMarketplace",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RegisterMarketplace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RegisterMarketplace1"
            }
          }
        }
      }
    },
    "/sdk-ri/token/marketplaces/{address}" : {
      "get" : {
        "tags" : [ "common-services: token" ],
        "summary" : "get marketplace index by marketplace address",
        "description" : "",
        "operationId" : "getMarketplaceByAddress",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MarketplaceIndex"
            }
          },
          "400" : {
            "description" : "failed to get marketplace index with this address"
          }
        }
      }
    },
    "/sdk-ri/token/payment" : {
      "post" : {
        "tags" : [ "common-services: token" ],
        "summary" : "token payment operation",
        "description" : "",
        "operationId" : "payment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataProviderPayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Payment"
            }
          },
          "400" : {
            "description" : "failed to execute payment"
          }
        }
      }
    },
    "/sdk-ri/token/setpaid" : {
      "post" : {
        "tags" : [ "common-services: token" ],
        "summary" : "set paid status of operation",
        "description" : "",
        "operationId" : "setPaid",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MarkTokenAsPaid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SetPaid"
            }
          },
          "400" : {
            "description" : "failed to set paid on transaction operation"
          }
        }
      }
    },
    "/sdk-ri/token/token-transfer/{transferId}" : {
      "get" : {
        "tags" : [ "common-services: token" ],
        "summary" : "get transaction status object with transfer identifier",
        "description" : "",
        "operationId" : "getTokenTransfersByTransferId",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transferId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InlineResponse2003"
            }
          },
          "400" : {
            "description" : "failed to get transaction object with this transferId"
          }
        }
      }
    },
    "/sdk-ri/token/transactions/{transactionHash}" : {
      "get" : {
        "tags" : [ "common-services: token" ],
        "summary" : "get transaction with transaction hash",
        "description" : "",
        "operationId" : "getTransactionsByTransactionHash",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionHash",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InlineResponse2004"
            }
          },
          "400" : {
            "description" : "failed to get transaction with this transactionHash"
          }
        }
      }
    },
    "/sdk-ri/update-offering" : {
      "patch" : {
        "tags" : [ "common-services: offering" ],
        "summary" : "update an offering",
        "description" : "",
        "operationId" : "updateDataOffering",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "access_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id_token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataOfferingDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "failed to update offering"
          }
        }
      }
    }
  },
  "definitions" : {
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "type" : "object"
        }
      }
    },
    "ApiResponseDataOfferingDto" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "$ref" : "#/definitions/DataOfferingDto"
        }
      }
    },
    "ApiResponseListNotification" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Notification"
          }
        }
      }
    },
    "ApiResponseListSubscription" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Subscription"
          }
        }
      }
    },
    "ApiResponseListUserSubscriptionList" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserSubscriptionList"
          }
        }
      }
    },
    "ApiResponseNotification" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "$ref" : "#/definitions/Notification"
        }
      }
    },
    "ApiResponseObject" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "type" : "object"
        }
      }
    },
    "ApiResponseString" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "type" : "string"
        }
      }
    },
    "ApiResponseSubscription" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "$ref" : "#/definitions/Subscription"
        }
      }
    },
    "ApiResponseVoid" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "data" : {
          "$ref" : "#/definitions/Void"
        }
      }
    },
    "Balances" : {
      "type" : "object",
      "properties" : {
        "balance" : {
          "type" : "object",
          "example" : "[\"0\",\"0\"]",
          "description" : "Balances."
        }
      }
    },
    "ClearBalance" : {
      "type" : "object",
      "properties" : {
        "senderAddress" : {
          "type" : "string",
          "example" : "0x79CD92CD7c1e380c1a6Ba5E9EF09D2F7c4820U5R",
          "description" : "The address of the marketplace."
        }
      }
    },
    "ClearingBalance" : {
      "type" : "object",
      "properties" : {
        "transferId" : {
          "type" : "string",
          "example" : "6fa4973b-11ce-56d8-8544-660e1a334b78",
          "description" : "The unique transfer id generated for this transaction."
        },
        "transactionObject" : {
          "$ref" : "#/definitions/RawTransaction1"
        }
      }
    },
    "CreateSubscription" : {
      "type" : "object",
      "required" : [ "category" ],
      "properties" : {
        "category" : {
          "type" : "string",
          "description" : "Category the user subscribes to"
        }
      }
    },
    "DataOffering" : {
      "type" : "object",
      "required" : [ "category", "contractParameters", "dataOfferingDescription", "dataOfferingExpirationTime", "dataOfferingTitle", "hasDataset", "hasPricingModel", "marketDid", "marketId", "owner", "ownerDid", "provider", "providerDid", "status" ],
      "properties" : {
        "provider" : {
          "type" : "string"
        },
        "marketId" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "providerDid" : {
          "type" : "string"
        },
        "marketDid" : {
          "type" : "string"
        },
        "ownerDid" : {
          "type" : "string"
        },
        "dataOfferingTitle" : {
          "type" : "string"
        },
        "dataOfferingDescription" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "dataOfferingExpirationTime" : {
          "type" : "string"
        },
        "contractParameters" : {
          "$ref" : "#/definitions/DataOfferingContractParameters"
        },
        "hasPricingModel" : {
          "$ref" : "#/definitions/DataOfferingHasPricingModel"
        },
        "hasDataset" : {
          "$ref" : "#/definitions/DataOfferingHasDataset"
        }
      }
    },
    "DataOfferingContractParameters" : {
      "type" : "object",
      "required" : [ "hasGoverningJurisdiction", "hasIntendedUse", "hasLicenseGrant", "interestDescription", "interestOfProvider", "purpose", "purposeDescription" ],
      "properties" : {
        "interestOfProvider" : {
          "type" : "string"
        },
        "interestDescription" : {
          "type" : "string"
        },
        "hasGoverningJurisdiction" : {
          "type" : "string"
        },
        "purpose" : {
          "type" : "string"
        },
        "purposeDescription" : {
          "type" : "string"
        },
        "hasIntendedUse" : {
          "$ref" : "#/definitions/DataOfferingContractParametersHasIntendedUse"
        },
        "hasLicenseGrant" : {
          "$ref" : "#/definitions/DataOfferingContractParametersHasLicenseGrant"
        }
      }
    },
    "DataOfferingContractParametersHasIntendedUse" : {
      "type" : "object",
      "required" : [ "editData", "processData", "shareDataWithThirdParty" ],
      "properties" : {
        "processData" : {
          "type" : "boolean"
        },
        "shareDataWithThirdParty" : {
          "type" : "boolean"
        },
        "editData" : {
          "type" : "boolean"
        }
      }
    },
    "DataOfferingContractParametersHasLicenseGrant" : {
      "type" : "object",
      "required" : [ "copyData", "exclusiveness", "revocable", "transferable" ],
      "properties" : {
        "copyData" : {
          "type" : "boolean"
        },
        "transferable" : {
          "type" : "boolean"
        },
        "exclusiveness" : {
          "type" : "boolean"
        },
        "revocable" : {
          "type" : "boolean"
        }
      }
    },
    "DataOfferingDto" : {
      "type" : "object",
      "required" : [ "category", "context", "contractParameters", "createdAt", "dataOfferingDescription", "dataOfferingExpirationTime", "dataOfferingId", "dataOfferingTitle", "hasDataset", "hasPricingModel", "marketDid", "marketId", "owner", "ownerDid", "provider", "providerDid", "status", "version" ],
      "properties" : {
        "context" : {
          "$ref" : "#/definitions/DataOfferingDtoContext"
        },
        "dataOfferingId" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "marketId" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "providerDid" : {
          "type" : "string"
        },
        "marketDid" : {
          "type" : "string"
        },
        "ownerDid" : {
          "type" : "string"
        },
        "dataOfferingTitle" : {
          "type" : "string"
        },
        "dataOfferingDescription" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "dataOfferingExpirationTime" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdAt" : {
          "type" : "string"
        },
        "contractParameters" : {
          "$ref" : "#/definitions/DataOfferingContractParameters"
        },
        "hasPricingModel" : {
          "$ref" : "#/definitions/DataOfferingDtoHasPricingModel"
        },
        "hasDataset" : {
          "$ref" : "#/definitions/DataOfferingDtoHasDataset"
        }
      }
    },
    "DataOfferingDtoContext" : {
      "type" : "object",
      "required" : [ "core", "dcat", "pricingModel" ],
      "properties" : {
        "core" : {
          "type" : "string"
        },
        "dcat" : {
          "type" : "string"
        },
        "pricingModel" : {
          "type" : "string"
        }
      }
    },
    "DataOfferingDtoHasDataset" : {
      "type" : "object",
      "required" : [ "accrualPeriodicity", "dataset", "datasetInformation", "description", "distribution", "issued", "keyword", "language", "modified", "spatial", "temporal", "theme", "title" ],
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "keyword" : {
          "type" : "string"
        },
        "dataset" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "issued" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "string"
        },
        "temporal" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "spatial" : {
          "type" : "string"
        },
        "accrualPeriodicity" : {
          "type" : "string"
        },
        "theme" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "distribution" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataOfferingHasDatasetDistribution"
          }
        },
        "datasetInformation" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataOfferingHasDatasetDatasetInformation"
          }
        }
      }
    },
    "DataOfferingDtoHasPricingModel" : {
      "type" : "object",
      "required" : [ "basicPrice", "currency", "hasFreePrice", "hasPaymentOnApi", "hasPaymentOnSize", "hasPaymentOnSubscription", "hasPaymentOnUnit", "pricingModelName" ],
      "properties" : {
        "pricingModelName" : {
          "type" : "string"
        },
        "basicPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currency" : {
          "type" : "string"
        },
        "hasPaymentOnSubscription" : {
          "$ref" : "#/definitions/DataOfferingDtoHasPricingModelHasPaymentOnSubscription"
        },
        "hasPaymentOnApi" : {
          "$ref" : "#/definitions/DataOfferingDtoHasPricingModelHasPaymentOnApi"
        },
        "hasPaymentOnUnit" : {
          "$ref" : "#/definitions/DataOfferingDtoHasPricingModelHasPaymentOnUnit"
        },
        "hasPaymentOnSize" : {
          "$ref" : "#/definitions/DataOfferingDtoHasPricingModelHasPaymentOnSize"
        },
        "hasFreePrice" : {
          "$ref" : "#/definitions/DataOfferingDtoHasPricingModelHasFreePrice"
        }
      }
    },
    "DataOfferingDtoHasPricingModelHasFreePrice" : {
      "type" : "object",
      "required" : [ "hasPriceFree" ],
      "properties" : {
        "hasPriceFree" : {
          "type" : "boolean"
        }
      }
    },
    "DataOfferingDtoHasPricingModelHasPaymentOnApi" : {
      "type" : "object",
      "required" : [ "description", "hasApiPrice", "numberOfObject", "paymentOnApiName" ],
      "properties" : {
        "paymentOnApiName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "numberOfObject" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasApiPrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataOfferingDtoHasPricingModelHasPaymentOnSize" : {
      "type" : "object",
      "required" : [ "dataSize", "description", "hasSizePrice", "paymentOnSizeName" ],
      "properties" : {
        "paymentOnSizeName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataSize" : {
          "type" : "string"
        },
        "hasSizePrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataOfferingDtoHasPricingModelHasPaymentOnSubscription" : {
      "type" : "object",
      "required" : [ "description", "hasSubscriptionPrice", "paymentOnSubscriptionName", "paymentType", "repeat", "timeDuration" ],
      "properties" : {
        "paymentOnSubscriptionName" : {
          "type" : "string"
        },
        "paymentType" : {
          "type" : "string"
        },
        "timeDuration" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "repeat" : {
          "type" : "string"
        },
        "hasSubscriptionPrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataOfferingDtoHasPricingModelHasPaymentOnUnit" : {
      "type" : "object",
      "required" : [ "dataUnit", "description", "hasUnitPrice", "paymentOnUnitName" ],
      "properties" : {
        "paymentOnUnitName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataUnit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasUnitPrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataOfferingHasDataset" : {
      "type" : "object",
      "required" : [ "accrualPeriodicity", "dataset", "datasetInformation", "description", "distribution", "issued", "keyword", "language", "modified", "spatial", "temporal", "temporalResolution", "theme", "title" ],
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "keyword" : {
          "type" : "string"
        },
        "dataset" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "issued" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "string"
        },
        "temporal" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "spatial" : {
          "type" : "string"
        },
        "accrualPeriodicity" : {
          "type" : "string"
        },
        "temporalResolution" : {
          "type" : "string"
        },
        "theme" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "distribution" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataOfferingHasDatasetDistribution"
          }
        },
        "datasetInformation" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataOfferingHasDatasetDatasetInformation"
          }
        }
      }
    },
    "DataOfferingHasDatasetAccessService" : {
      "type" : "object",
      "required" : [ "conformsTo", "endpointDescription", "endpointURL", "servesDataset", "serviceSpecs" ],
      "properties" : {
        "conformsTo" : {
          "type" : "string"
        },
        "endpointDescription" : {
          "type" : "string"
        },
        "endpointURL" : {
          "type" : "string"
        },
        "servesDataset" : {
          "type" : "string"
        },
        "serviceSpecs" : {
          "type" : "string"
        }
      }
    },
    "DataOfferingHasDatasetDatasetInformation" : {
      "type" : "object",
      "required" : [ "cppType", "deviceId", "measurementChannelType", "measurementType", "sensorId", "sensorType" ],
      "properties" : {
        "measurementType" : {
          "type" : "string"
        },
        "measurementChannelType" : {
          "type" : "string"
        },
        "sensorId" : {
          "type" : "string"
        },
        "deviceId" : {
          "type" : "string"
        },
        "cppType" : {
          "type" : "string"
        },
        "sensorType" : {
          "type" : "string"
        }
      }
    },
    "DataOfferingHasDatasetDistribution" : {
      "type" : "object",
      "required" : [ "accessRights", "accessService", "conformsTo", "description", "downloadType", "license", "mediaType", "packageFormat", "title" ],
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "license" : {
          "type" : "string"
        },
        "accessRights" : {
          "type" : "string"
        },
        "downloadType" : {
          "type" : "string"
        },
        "conformsTo" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        },
        "packageFormat" : {
          "type" : "string"
        },
        "accessService" : {
          "$ref" : "#/definitions/DataOfferingHasDatasetAccessService"
        }
      }
    },
    "DataOfferingHasPricingModel" : {
      "type" : "object",
      "required" : [ "basicPrice", "currency", "pricingModelName" ],
      "properties" : {
        "pricingModelName" : {
          "type" : "string"
        },
        "basicPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currency" : {
          "type" : "string"
        },
        "hasPaymentOnSubscription" : {
          "$ref" : "#/definitions/DataOfferingHasPricingModelHasPaymentOnSubscription"
        },
        "hasPaymentOnApi" : {
          "$ref" : "#/definitions/DataOfferingHasPricingModelHasPaymentOnApi"
        },
        "hasPaymentOnUnit" : {
          "$ref" : "#/definitions/DataOfferingHasPricingModelHasPaymentOnUnit"
        },
        "hasPaymentOnSize" : {
          "$ref" : "#/definitions/DataOfferingHasPricingModelHasPaymentOnSize"
        },
        "hasFreePrice" : {
          "$ref" : "#/definitions/DataOfferingHasPricingModelHasFreePrice"
        }
      }
    },
    "DataOfferingHasPricingModelHasFreePrice" : {
      "type" : "object",
      "properties" : {
        "hasPriceFree" : {
          "type" : "boolean"
        }
      }
    },
    "DataOfferingHasPricingModelHasPaymentOnApi" : {
      "type" : "object",
      "properties" : {
        "paymentOnApiName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "numberOfObject" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasApiPrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataOfferingHasPricingModelHasPaymentOnSize" : {
      "type" : "object",
      "properties" : {
        "paymentOnSizeName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataSize" : {
          "type" : "string"
        },
        "hasSizePrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataOfferingHasPricingModelHasPaymentOnSubscription" : {
      "type" : "object",
      "properties" : {
        "paymentOnSubscriptionName" : {
          "type" : "string"
        },
        "paymentType" : {
          "type" : "string"
        },
        "timeDuration" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "repeat" : {
          "type" : "string"
        },
        "hasSubscriptionPrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataOfferingHasPricingModelHasPaymentOnUnit" : {
      "type" : "object",
      "properties" : {
        "paymentOnUnitName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataUnit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasUnitPrice" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataProvider" : {
      "type" : "object",
      "required" : [ "description", "name", "providerId" ],
      "properties" : {
        "providerId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "organization" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataProviderOrganization"
          }
        }
      }
    },
    "DataProviderOrganization" : {
      "type" : "object",
      "properties" : {
        "organizationId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "contactPoint" : {
          "type" : "string"
        }
      }
    },
    "DataProviderPayment" : {
      "type" : "object",
      "properties" : {
        "senderAddress" : {
          "type" : "string",
          "example" : "0xb8E0101259550765a5f1287d0F680Ee9B09b44F8",
          "description" : "The address of the sender."
        },
        "providerAddress" : {
          "type" : "string",
          "example" : "0xb13894b969ad9A69108684dA8004E53A32c6df66",
          "description" : "The address of the Data Provider."
        },
        "amount" : {
          "type" : "string",
          "example" : "10",
          "description" : "The amount of tokens."
        }
      }
    },
    "DeployTransactionToBesu" : {
      "type" : "object",
      "properties" : {
        "serializedTx" : {
          "type" : "string",
          "example" : "0xf90127148302e34683bebc209483a000000000000000ff8eab3673c32559b63ff391772aa300121a94d40000000000042d616639372d000000000d6cc284f4d4ca9a737ea9ec39805f811a35905b61ec275fac92aa1f2c0ca2",
          "description" : "The address of the message sender."
        }
      }
    },
    "DeployedSignedTransaction" : {
      "type" : "object",
      "properties" : {
        "transactionObject" : {
          "$ref" : "#/definitions/DeployedTransaction"
        }
      }
    },
    "DeployedTransaction" : {
      "type" : "object",
      "properties" : {
        "blockHash" : {
          "type" : "string"
        },
        "blockNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "contractAddress" : {
          "type" : "string"
        },
        "cumulativeGasUsed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "from" : {
          "type" : "string"
        },
        "gasUsed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "logs" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "logsBloom" : {
          "type" : "string"
        },
        "status" : {
          "type" : "boolean"
        },
        "to" : {
          "type" : "string"
        },
        "transactionHash" : {
          "type" : "string"
        },
        "transactionIndex" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "The transaction hash generated for this block."
    },
    "ExchangeIn" : {
      "type" : "object",
      "properties" : {
        "transferId" : {
          "type" : "string",
          "example" : "6fa4973b-11ce-56d8-8544-660e1a334g88",
          "description" : "The unique transfer id generated for this transaction."
        },
        "transactionObject" : {
          "$ref" : "#/definitions/RawTransaction2"
        }
      }
    },
    "ExchangeMoneyForTokens" : {
      "type" : "object",
      "properties" : {
        "senderAddress" : {
          "type" : "string",
          "example" : "0xD94f3239185C27937367B9A1A17aB70f4F631883",
          "description" : "The address of the marketpace."
        },
        "userAddress" : {
          "type" : "string",
          "example" : "0xb8E0101259550765a5f1287d0F680Ee9B09b41E7",
          "description" : "The address of the Data consumer."
        },
        "tokens" : {
          "type" : "string",
          "example" : "10",
          "description" : "The amount of tokens."
        }
      }
    },
    "ExchangeOut" : {
      "type" : "object",
      "properties" : {
        "transferId" : {
          "type" : "string",
          "example" : "6fa4973b-11ce-56d8-8544-660e1a334b92",
          "description" : "The unique transfer id generated for this transaction."
        },
        "transactionObject" : {
          "$ref" : "#/definitions/RawTransaction3"
        }
      }
    },
    "ExchangeTokensForMoney" : {
      "type" : "object",
      "properties" : {
        "senderAddress" : {
          "type" : "string",
          "example" : "0xD94f3239185C27937367B9A1A17aB70f4F631667",
          "description" : "The address of the sender."
        },
        "marketplaceAddress" : {
          "type" : "string",
          "example" : "0xb8E0101259550765a5f1287d0F680Ee9B09b4235",
          "description" : "The address of the the marketplace."
        }
      }
    },
    "FileChannel" : {
      "type" : "object",
      "properties" : {
        "open" : {
          "type" : "boolean"
        }
      }
    },
    "FileDescriptor" : {
      "type" : "object"
    },
    "FileInputStream" : {
      "type" : "object",
      "properties" : {
        "fd" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "channel" : {
          "$ref" : "#/definitions/FileChannel"
        }
      }
    },
    "InlineObject" : {
      "type" : "object",
      "properties" : {
        "credentialJwt" : {
          "type" : "string"
        }
      }
    },
    "InlineObject1" : {
      "type" : "object",
      "properties" : {
        "credentialJwt" : {
          "type" : "string"
        },
        "credentialIssuer" : {
          "type" : "string"
        }
      }
    },
    "InlineResponse2003" : {
      "type" : "object",
      "properties" : {
        "transfer" : {
          "type" : "object",
          "example" : "{\"0\":\"a8e70c41-3c76-5cb6-b0e9-07da49d94621\",\"1\":\"0x3bC438887726c79498c8a79CA3226e6e84d03458\",\"2\":\"0x6F0a2430CD784b871b9eB206B20a25b08351E3AE\",\"3\":\"100\",\"4\":true,\"5\":\"\",\"transferId\":\"a8e70c41-3c76-5cb6-b0e9-07da49d94621\",\"fromAddress\":\"0x3bC438887726c79498c8a79CA3226e6e84d03458\",\"toAddress\":\"0x6F0a2430CD784b871b9eB206B20a25b08351E3AE\",\"tokenAmount\":\"100\",\"isPaid\":true,\"transferCode\":\"\"}",
          "description" : "The pending transaction hash."
        }
      }
    },
    "InlineResponse2004" : {
      "type" : "object",
      "properties" : {
        "receipt" : {
          "type" : "object",
          "example" : "{\"transactionHash\":\"0xa3586e3442d87eda95dff2ae4804d78f3b6d0b0945fba61ef1cc1b96650349c9\",\"transactionIndex\":0,\"blockHash\":\"0xc410fc12a2c18918d9032e167362d7e0b47fff38938cd83645c3319d49300d5e\",\"blockNumber\":123,\"from\":\"0xd94f3239185c27937367b9a1a17ab70f4f631005\",\"to\":\"0x2567d618a8bc5996ab447ecda3a2b0bf7b323840\",\"gasUsed\":60741,\"cumulativeGasUsed\":60741,\"contractAddress\":null,\"logs\":[],\"status\":true,\"logsBloom\":\"0x}",
          "description" : "The pending transaction hash."
        }
      }
    },
    "Invoice" : {
      "type" : "object",
      "properties" : {
        "ConsumerID" : {
          "type" : "string"
        },
        "CompanyName" : {
          "type" : "string"
        },
        "VAT" : {
          "type" : "string"
        },
        "ContractID" : {
          "type" : "string"
        },
        "NumBlock" : {
          "type" : "string"
        },
        "BlockSize" : {
          "type" : "string"
        },
        "BlockPrice" : {
          "type" : "string"
        },
        "TotalAmount" : {
          "type" : "string"
        }
      }
    },
    "MarkTokenAsPaid" : {
      "type" : "object",
      "properties" : {
        "senderAddress" : {
          "type" : "string",
          "example" : "0x79CD92CD7c1e380c1a6Ba5E9EF09D2F7c4820T40",
          "description" : "The address of the message sender."
        },
        "transferId" : {
          "type" : "string",
          "example" : "6fa4973b-11ce-56d8-8544-660e1a334b23",
          "description" : "The transfer's unique identifier"
        },
        "transferCode" : {
          "type" : "string",
          "example" : "GR99203205004989123400",
          "description" : "The fiat money transfer's unique identifier"
        }
      }
    },
    "MarketplaceIndex" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "string",
          "example" : "3",
          "description" : "Index of marketplace."
        }
      }
    },
    "Notification" : {
      "type" : "object",
      "required" : [ "action", "id", "origin", "receptor", "status" ],
      "properties" : {
        "data" : {
          "type" : "object",
          "description" : "Contains the data of the notification"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the notification"
        },
        "receptor" : {
          "type" : "string",
          "description" : "Destination of the notification"
        },
        "id" : {
          "type" : "string",
          "description" : "Autogenerated ID for identification"
        },
        "action" : {
          "type" : "string",
          "description" : "Action for the notification"
        },
        "unread" : {
          "type" : "boolean",
          "description" : "True if the notification has not been read, otherwise false"
        },
        "origin" : {
          "type" : "string",
          "description" : "Origin of the notification"
        }
      }
    },
    "Payment" : {
      "type" : "object",
      "properties" : {
        "transferId" : {
          "type" : "string",
          "example" : "6fa4973b-11ce-56d8-8544-660e1a334h32",
          "description" : "The unique transfer id generated for this transaction."
        },
        "transactionObject" : {
          "$ref" : "#/definitions/RawTransaction4"
        }
      }
    },
    "RawTransaction" : {
      "type" : "object",
      "properties" : {
        "chainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "to" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        }
      },
      "description" : "The pending transaction object."
    },
    "RawTransaction1" : {
      "type" : "object",
      "properties" : {
        "chainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "to" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        }
      },
      "description" : "The transaction hash of the exchange."
    },
    "RawTransaction2" : {
      "type" : "object",
      "properties" : {
        "chainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "to" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        }
      },
      "description" : "The pending transaction hash."
    },
    "RawTransaction3" : {
      "type" : "object",
      "properties" : {
        "chainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "to" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        }
      },
      "description" : "The transaction hash of the exchange."
    },
    "RawTransaction4" : {
      "type" : "object",
      "properties" : {
        "chainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "to" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        }
      },
      "description" : "The pending transaction hash."
    },
    "RawTransaction5" : {
      "type" : "object",
      "properties" : {
        "chainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gasPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "to" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        }
      },
      "description" : "The transaction hash generated for this block."
    },
    "RegisterMarketplace" : {
      "type" : "object",
      "properties" : {
        "senderAddress" : {
          "type" : "string",
          "example" : "0x79CD92CD7c1e380c1a6Ba5E9EF09D2F7c4820D45",
          "description" : "The address of the sender."
        },
        "marketplaceAddress" : {
          "type" : "string",
          "example" : "0x79CD92CD7c1e380c1a6Ba5E9EF09D2F7c4820D45",
          "description" : "The address of the marketpace."
        }
      }
    },
    "RegisterMarketplace1" : {
      "type" : "object",
      "properties" : {
        "transactionObject" : {
          "$ref" : "#/definitions/RawTransaction"
        }
      }
    },
    "ServiceNotification" : {
      "type" : "object",
      "required" : [ "receiver_id" ],
      "properties" : {
        "message" : {
          "type" : "object",
          "description" : "Data to send, example={'category': 'Agriculture'}"
        },
        "receiver_id" : {
          "type" : "string",
          "example" : "offering.new",
          "description" : "Queue name to send the notification",
          "enum" : [ "OFFERING_NEW", "OFFERING_UPDATE", "AGREEMENT_ACCEPTED", "AGREEMENT_REJECTED", "AGREEMENT_UPDATE", "AGREEMENT_PENDING", "AGREEMENT_TERMINATION", "AGREEMENT_CLAIM" ]
        }
      }
    },
    "SetPaid" : {
      "type" : "object",
      "properties" : {
        "transactionObject" : {
          "$ref" : "#/definitions/RawTransaction5"
        }
      }
    },
    "Subscription" : {
      "type" : "object",
      "required" : [ "active", "category", "id" ],
      "properties" : {
        "active" : {
          "type" : "boolean",
          "description" : "Describes if the subscription is active or not"
        },
        "id" : {
          "type" : "string",
          "description" : "Autogenerated id for identification"
        },
        "category" : {
          "type" : "string",
          "description" : "Category the user subscribes to"
        }
      }
    },
    "Template" : {
      "type" : "object",
      "properties" : {
        "DataOfferingDescription" : {
          "$ref" : "#/definitions/TemplateDataOfferingDescription"
        },
        "Purpose" : {
          "type" : "string"
        },
        "hasParties" : {
          "$ref" : "#/definitions/TemplateHasParties"
        },
        "hasDuration" : {
          "$ref" : "#/definitions/TemplateHasDuration"
        },
        "hasDuties/Obligations" : {
          "$ref" : "#/definitions/TemplateHasDutiesObligations"
        },
        "hasDescriptionOfData" : {
          "$ref" : "#/definitions/TemplateHasDescriptionOfData"
        },
        "hasIntendedUse" : {
          "$ref" : "#/definitions/TemplateHasIntendedUse"
        },
        "hasLicenseGrant" : {
          "$ref" : "#/definitions/TemplateHasLicenseGrant"
        },
        "DataStream" : {
          "type" : "boolean"
        }
      }
    },
    "TemplateDataOfferingDescription" : {
      "type" : "object",
      "properties" : {
        "dataOfferingId" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "isActive" : {
          "type" : "boolean"
        }
      }
    },
    "TemplateHasDescriptionOfData" : {
      "type" : "object",
      "properties" : {
        "DescriptionOfData" : {
          "$ref" : "#/definitions/TemplateHasDescriptionOfDataDescriptionOfData"
        }
      }
    },
    "TemplateHasDescriptionOfDataDescriptionOfData" : {
      "type" : "object",
      "properties" : {
        "dataType" : {
          "type" : "string"
        },
        "dataFormat" : {
          "type" : "string"
        },
        "dataSource" : {
          "type" : "string"
        }
      }
    },
    "TemplateHasDuration" : {
      "type" : "object",
      "properties" : {
        "Duration" : {
          "$ref" : "#/definitions/TemplateHasDurationDuration"
        }
      }
    },
    "TemplateHasDurationDuration" : {
      "type" : "object",
      "properties" : {
        "creationDate" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        }
      }
    },
    "TemplateHasDutiesObligations" : {
      "type" : "object",
      "properties" : {
        "Duties/Obligations" : {
          "$ref" : "#/definitions/TemplateHasDutiesObligationsDutiesObligations"
        }
      }
    },
    "TemplateHasDutiesObligationsDutiesObligations" : {
      "type" : "object",
      "properties" : {
        "qualityofData" : {
          "type" : "string"
        },
        "characteristics" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "dataAvailability" : {
          "type" : "boolean"
        }
      }
    },
    "TemplateHasIntendedUse" : {
      "type" : "object",
      "properties" : {
        "IntendedUse" : {
          "$ref" : "#/definitions/TemplateHasIntendedUseIntendedUse"
        }
      }
    },
    "TemplateHasIntendedUseIntendedUse" : {
      "type" : "object",
      "properties" : {
        "processData" : {
          "type" : "boolean"
        },
        "shareDataWithThirdParty" : {
          "type" : "boolean"
        },
        "editData" : {
          "type" : "boolean"
        }
      }
    },
    "TemplateHasLicenseGrant" : {
      "type" : "object",
      "properties" : {
        "LicenseGrant" : {
          "$ref" : "#/definitions/TemplateHasLicenseGrantLicenseGrant"
        }
      }
    },
    "TemplateHasLicenseGrantLicenseGrant" : {
      "type" : "object",
      "properties" : {
        "copyData" : {
          "type" : "boolean"
        },
        "transferable" : {
          "type" : "boolean"
        },
        "exclusiveness" : {
          "type" : "boolean"
        },
        "revocable" : {
          "type" : "boolean"
        }
      }
    },
    "TemplateHasParties" : {
      "type" : "object",
      "properties" : {
        "Parties" : {
          "$ref" : "#/definitions/TemplateHasPartiesParties"
        }
      }
    },
    "TemplateHasPartiesParties" : {
      "type" : "object",
      "properties" : {
        "dataProvider" : {
          "type" : "string"
        },
        "dataConsumer" : {
          "type" : "string"
        }
      }
    },
    "UserNotification" : {
      "type" : "object",
      "required" : [ "origin", "receiver_id", "status", "type" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "Status of the notification"
        },
        "message" : {
          "type" : "object",
          "description" : "Data to send, example={'category': 'Agriculture'}"
        },
        "receiver_id" : {
          "type" : "string",
          "example" : "UserID123",
          "description" : "User ID for notify a user"
        },
        "origin" : {
          "type" : "string",
          "description" : "Origin of the notification"
        },
        "predefined" : {
          "type" : "boolean",
          "example" : true
        },
        "type" : {
          "type" : "string",
          "example" : "offering.new",
          "description" : "Queue name to send the notification",
          "enum" : [ "OFFERING_NEW", "OFFERING_UPDATE", "AGREEMENT_ACCEPTED", "AGREEMENT_REJECTED", "AGREEMENT_UPDATE", "AGREEMENT_PENDING", "AGREEMENT_TERMINATION", "AGREEMENT_CLAIM" ]
        }
      }
    },
    "UserSubscriptionList" : {
      "type" : "object",
      "properties" : {
        "subscriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Subscription"
          }
        },
        "user_id" : {
          "type" : "string"
        }
      }
    },
    "Void" : {
      "type" : "object"
    }
  }
}